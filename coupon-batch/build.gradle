plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.palantir.docker" version '0.35.0'
}
group 'org.example.coupon.batch'
version = '0.0.1'
java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor('org.projectlombok:lombok')

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.18.0'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
}

test {
    useJUnitPlatform()
}


docker {
    println(tasks.bootJar.outputs.files)
    name project.name+":"+version
    dockerfile file('../Dockerfile')

    files tasks.bootJar.outputs.files

    buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
}

