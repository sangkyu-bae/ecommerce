plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.palantir.docker" version '0.35.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2021.0.8")
	axonVersion = "4.8.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.kafka:spring-kafka-test'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor('org.projectlombok:lombok')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
	implementation 'com.vladmihalcea:hibernate-types-52:2.21.1'
	//feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation group: 'io.github.openfeign', name: 'feign-gson', version: '11.0'

	// restTemplate
	implementation 'org.apache.httpcomponents:httpcore:4.4.15'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation project(path: ':common')

	//axon
	implementation group: 'org.axonframework', name: 'axon-configuration', version: "$axonVersion"
	implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "$axonVersion"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
	println(tasks.bootJar.outputs.files)
	name project.name+":"+version
	dockerfile file('../Dockerfile')

	files tasks.bootJar.outputs.files

	buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
}

