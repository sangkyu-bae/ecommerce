plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.palantir.docker" version '0.30.0'
}
//group = 'delivery'

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '11'
//java {
//	sourceCompatibility = '11'
//}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2021.0.8")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	implementation project(path: ':common')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
	println(tasks.bootJar.outputs.files)
	name project.name+":"+version
	dockerfile file('../Dockerfile')

	files tasks.bootJar.outputs.files

	buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
}
